datasource db {
    url      = env("DB_URL")
    provider = "postgresql"
}

generator client {
    provider = "prisma-client-js"
}

model Game {
    id              String   @id @default(cuid())
    name            String
    description     String
    platform        Platform @relation(fields: [platformName], references: [name])
    platformName    String
    dateReleased    DateTime
    //dateAdded DateTime
    //canBorrow Boolean
    playerMin       Int
    playerMax       Int
    playtimeMinutes Int // Stored in minutes @map("playtime")
    borrow          Borrow[]

    @@map("games")
}

model Platform {
    name String @id
    game Game[]

    @@map("platforms")
}

model User {
    id  String @id @default(cuid())
    cid String @unique

    organizationsMember OrganizationMember[]
    organizationsAdmin  OrganizationAdmin[]

    @@map("users")
}

model OrganizationMember {
    organization      Organization       @relation(fields: [organizationId], references: [id])
    organizationId    String
    user              User               @relation(fields: [userId], references: [id])
    userId            String
    addedFromGamma    Boolean            @default(false)
    organizationAdmin OrganizationAdmin?

    @@id([organizationId, userId])
    @@map("organization_members")
}

model OrganizationAdmin {
    organization       Organization       @relation(fields: [organizationId], references: [id])
    organizationId     String
    user               User               @relation(fields: [userId], references: [id])
    userId             String
    addedFromGamma     Boolean            @default(false)
    organizationMember OrganizationMember @relation(fields: [organizationId, userId], references: [organizationId, userId])

    @@id([organizationId, userId])
    @@map("organization_admins")
}

model Organization {
    id                 String   @id @default(cuid())
    gammaSuperNames    String[]
    addGammaAsOrgAdmin Boolean  @default(false)

    name String

    members OrganizationMember[]
    admins  OrganizationAdmin[]

    @@map("organizations")
}

model Borrow {
    game        Game     @relation(fields: [gameId], references: [id])
    id          String   @id @default(cuid())
    gameId      String
    user        String
    borrowStart DateTime
    borrowEnd   DateTime
    returned    Boolean  @default(false)

    @@map("borrows")
}
