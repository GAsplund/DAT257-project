datasource db {
    url      = env("DB_URL")
    provider = "postgresql"
}

generator client {
    provider = "prisma-client-js"
}

model Game {
    id              String   @id @default(cuid())
    name            String
    description     String
    platform        Platform @relation(fields: [platformName], references: [name])
    platformName    String
    dateReleased    DateTime
    //dateAdded DateTime
    //canBorrow Boolean
    playerMin    Int
    playerMax    Int
    playtimeMinutes Int // Stored in minutes @map("playtime")
    borrow Borrow[]
    request BorrowRequest[]

    @@map("games")
}

model Platform {
    name String @id
    game Game[]
    suggest Suggest[]

    @@map("platforms")
}

model Borrow {
    game Game @relation(fields: [gameId], references: [id])
    id              String   @id @default(cuid())
    gameId          String
    user            String
    borrowStart     DateTime
    borrowEnd       DateTime
    returned        Boolean  @default(false)
    @@map("borrows")
}

enum BorrowRequestStatus {
    PENDING
    ACCEPTED
    REJECTED
}

model BorrowRequest {
    game            Game                @relation(fields: [gameId], references: [id])
    gameId          String
    user            String
    borrowStart     DateTime
    borrowEnd       DateTime
    status          BorrowRequestStatus @default(PENDING)

    @@id([gameId, borrowStart, borrowEnd])
    @@map("borrow_requests")
}

model Suggest {
    name String @id
    description String
    platform        Platform @relation(fields: [platformName], references: [name])
    platformName    String 
    dateReleased    DateTime
    playtimeMinutes Int // Stored in minutes @map("playtime")
    playerMin    Int
    playerMax    Int
    @@map("suggests")
}
